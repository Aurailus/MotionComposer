.timeline {
	background-color: var(--background-color);
	overflow: hidden;
	display: grid;
	grid-template-columns: 120px 1fr;
}

.timeline_labels {
	display: grid;
	grid-template-columns: 1fr;
	grid-template-rows: 96px 32px;
	grid-auto-rows: 32px;
	border-right: 2px solid var(--background-color-dark);
	background-color: var(--background-color);
}

.timeline_label {
	&:not(:first-child) { border-top: 2px solid var(--background-color-dark); }
	display: flex;
	align-items: center;
	text-align: right;
	padding: 0px 8px;

	label {
		width: 100%;
	}
}

.timeline_wrapper {
  width: 100%;
  position: relative;
  overflow-x: scroll;
  overflow-y: auto;

  &::-webkit-scrollbar { background-color: var(--background-color); }
  &::-webkit-scrollbar-thumb { border-color: var(--background-color); }
}

.timeline {
  position: relative;
  overflow: hidden;
  height: 100%;
}

.timeline_content {
  position: relative;
  overflow: visible;
  height: 100%;
  width: max-content;
  background-color: color-mix(in hsl, var(--surface-color) 30%, var(--background-color));
}

.timestamp {
  user-select: none;
  pointer-events: none;
  position: absolute;
  top: 0px;
  bottom: 0;
  width: 0;
  border-left: 1px solid var(--surface-color);
  border-right: 1px solid var(--surface-color);
  display: flex;
	opacity: 0.5;
  justify-content: center;

  &.odd { opacity: 0.25; }

  &:not(.odd)::after {
		position: absolute;
    font-family: var(--font-family-mono);
    font-size: var(--font-size-small);
		top: 0;
    text-align: center;
    display: block;
    content: attr(data-frame);
		font-weight: 600;
    color: rgba(255, 255, 255, 0.4);
  }
}

.clips_track {
  height: 72px;
  position: relative;
  margin-top: 4px;

  .clip {
    margin-bottom: 32px;
  }
}

.audio_track {
  height: 32px;
  display: flex;
  width: max-content;
}

.clip {
  --clip-left-url: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='6.4805' height='158.46' version='1.1' viewBox='0 0 1.7227 41.596' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='m1.7227-0.26337v42.123h-1.7227l1.3291-1.327-1.3177-1.3177 1.3177-1.3177-1.3291-1.3291 1.3291-1.327-1.3177-1.3177 1.3177-1.3182-1.2362-1.2362h-0.092935l0.046727-0.04621-0.046727-0.04673h0.092935l1.2362-1.2341-1.3177-1.3182 1.3177-1.3177-1.3291-1.3291 1.3291-1.327-1.3177-1.3177 1.3177-1.3177-1.3052-1.3052h-0.023883l0.011941-0.01194-0.011941-0.01194h0.023883l1.3052-1.3032-1.3177-1.3177 1.3177-1.3177-1.3291-1.3291 1.3291-1.327-1.3177-1.3182 1.3177-1.3177-1.2346-1.2346h-0.094492l0.047246-0.04725-0.047246-0.04725h0.094492l1.2346-1.2325-1.3177-1.3177 1.3177-1.3177-1.3291-1.3291 1.3291-1.327-1.3177-1.3177 1.3177-1.3177-1.3291-1.3291z'/%3E%3C/svg%3E%0A");

  --clip-right-url: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='6.4805' height='158.46' version='1.1' viewBox='0 0 1.7227 41.596' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='m0-1.5925v42.123h1.7227l-1.3291-1.327 1.3177-1.3177-1.3177-1.3177 1.3291-1.3291-1.3291-1.327 1.3177-1.3177-1.3177-1.3182 1.2362-1.2362h0.092935l-0.046727-0.04621 0.046727-0.04673h-0.092935l-1.2362-1.2341 1.3177-1.3182-1.3177-1.3177 1.3291-1.3291-1.3291-1.327 1.3177-1.3177-1.3177-1.3177 1.3052-1.3052h0.023883l-0.011941-0.01194 0.011941-0.01194h-0.023883l-1.3052-1.3032 1.3177-1.3177-1.3177-1.3177 1.3291-1.3291-1.3291-1.327 1.3177-1.3182-1.3177-1.3177 1.2346-1.2346h0.094492l-0.047246-0.04725 0.047246-0.04725h-0.094492l-1.2346-1.2325 1.3177-1.3177-1.3177-1.3177 1.3291-1.3291-1.3291-1.327 1.3177-1.3177-1.3177-1.3177 1.3291-1.3291z'/%3E%3C/svg%3E%0A");

  --clip-gap: 6px;

  flex-shrink: 0;
  position: absolute;
  top: 0;
  bottom: 0;
  padding-left: calc(var(--clip-gap) / 2);
  padding-right: calc(var(--clip-gap) / 2);

  &:first-child { padding-left: calc(var(--clip-gap)); }
  &:last-child { padding-right: calc(var(--clip-gap)); }

  &.cropped_left {
    padding-left: 1px;
    .container { padding-left: 4px; }

    .clip_handle {
      mask: var(--clip-left-url) top left/6.6px repeat-y,
        linear-gradient(to right, transparent 0px, transparent 5.9px, black 6px, black 100%);
    }
  }

  &.cropped_right {
    padding-right: 0.5px;
    &:has(+ .clip:not(.cropped_left)) { padding-right: 1px; }
    .container { padding-right: 4px; }

    .clip_handle {
      mask: var(--clip-right-url) top right/6.6px repeat-y,
        linear-gradient(to right, black 6px, black calc(100% - 6px), transparent calc(100% - 5.9px));
    }
  }

  &.cropped_left.cropped_right {

    .clip_handle {
      mask: var(--clip-left-url) top left/6.6px repeat-y,
        var(--clip-right-url) top right/6.6px repeat-y,
        linear-gradient(to right, transparent, transparent 5.9px, black 6px, black calc(100% - 6px), transparent calc(100% - 5.9px));
    }
  }

  .scene_clip_label {
    display: flex;
    position: relative;
    z-index: 10;
    gap: 6px;
    overflow: hidden;
    max-width: 100%;
    mask-image: linear-gradient(to right, black 0px, black calc(100% - 32px), transparent calc(100%));

    svg {
      width: 16px;
      color: #fff5;
      flex-shrink: 0;
    }

    .name {
      flex-grow: 1;
      overflow: hidden;
      width: 1000px;
    }
  }

  .clip_inner {
    position: relative;
    cursor: grab;
    height: 100%;

    &:active {
      cursor: grabbing;
    }

    .range_select {
      position: absolute;
      background-color: var(--theme);
      width: 3px;
      height: 100%;
      top: 0;
      bottom: 0;
      border-radius: 0px 4px 4px 0px;
      opacity: 0;

      &::before {
        content: '';
        display: block;
        position: absolute;
        top: 0;
        bottom: 0;
        left: -6px;
        right: -3px;
      }

      &:hover {
        opacity: 1;
      }

      &.left { transform: scaleX(-1); left: 0; cursor: w-resize; }
      &.right { right: 0; cursor: e-resize; }
    }

    .clip_handle {
      overflow: hidden;
      height: 100%;

      &::before {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        display: block;
        content: '';
        background-color: var(--surface-color-hover);
        border-radius: var(--radius);
        transition: background-color 0.15s;
      }

      .container {
        width: calc(100% - 16px);
        height: 100%;
        margin-left: 8px;
        overflow: hidden;
        display: flex;
        align-items: center;

        > .label {
          display: grid;
        }
      }

      .name {
        color: #ffffff99;
        cursor: pointer;
        position: relative;
        height: 100%;

        &:hover {
          text-decoration: underline;
        }
      }
    }
  }

  .clip_handle > .label {
    position: absolute;
    height: 32px;
    padding: 2px;
    cursor: pointer;
    z-index: 5;

    &:active {
      cursor: grabbing;
    }

    &::before {
      content: attr(data-name);
      display: block;
      border-radius: 0 14px 14px 14px;
      padding: 0 8px;
      font-weight: 500;
      font-size: 14px;
      background-color: color-mix(in hsl, white 18%, black);
      color: color-mix(in hsl, white 40%, black);
      // border: 2px solid var(--background-color);
      border: 2px solid color-mix(in hsl, var(--surface-color) 30%, var(--background-color));
      transition: color 0.15s, background-color 0.15s;
    }

    &:hover,
    &:active {
      &::before {
        box-shadow: 0 0 0 2px white inset;
      }
      z-index: 10;
    }
  }

  .label_backdrop {
    box-sizing: content-box;
    position: absolute;
    height: 24px;
    margin-top: 4px;
    margin-left: 4px;
    padding-right: 24px;
    cursor: pointer;
    border-radius: 0 0 12px 12px;
    background-color: color-mix(in hsl, white 4%, transparent);
    pointer-events: none;
    transition: color 0.15s, background-color 0.15s;
  }

  &:hover {
    z-index: 100;

    .label::before {
      background-color: var(--theme);
      color: var(--background-color-dark);
      font-weight: bold;
    }

    .label_backdrop {
      background-color: var(--theme-overlay);
    }

    .clip_handle {
      color: color-mix(in hsl, var(--surface-color-hover) 30%, var(--surface-color-light));
    }
  }

  .audio_container {
    display: grid;
    position: absolute;
    top: 0;
  }
}

.audio_clip {

  .clip_handle::before {
    color: color-mix(in oklab, var(--theme) 15%, var(--background-color-dark));
  }

  .audio_waveform {
    padding: 4px;
    fill: color-mix(in oklab, var(--theme) 20%, transparent);
  }

  .name {
    color: color-mix(in oklab, var(--theme) 30%, white) !important;
    text-shadow: 0px 0px 12px color-mix(in oklab, var(--theme) 15%, var(--background-color-dark)),
    0px 0px 4px color-mix(in oklab, var(--theme) 15%, var(--background-color-dark)),
    0px 0px 8px color-mix(in oklab, var(--theme) 15%, var(--background-color-dark)),
    0px 0px 16px color-mix(in oklab, var(--theme) 15%, var(--background-color-dark)),
    0px 0px 24px color-mix(in oklab, var(--theme) 15%, var(--background-color-dark));
    // font-weight: bold;
    // background-color: color-mix(in oklab, var(--theme) 15%, var(--background-color-dark));
    padding: 6px 12px 6px 0px !important;
    // display: block;
    z-index: 20;
  }
}

.playhead {
  position: absolute;
  width: 2px;
  top: 4px;
  bottom: 0;
  z-index: 200;
  background-color: var(--theme);
  pointer-events: none;
  display: flex;
  align-items: flex-start;
  justify-content: center;

  &::before {
    display: block;
    padding: 0 3px;
    border-radius: 3px;
    background-color: var(--theme);
    font-family: var(--font-family-mono);
    font-size: var(--font-size-small);
    line-height: 16px;
    font-weight: bold;
    color: #000000;
    content: attr(data-frame);
  }
}

.scrub_line {
  position: absolute;
  width: 2px;
  top: 0;
  bottom: 0;
  background-color: white;
  opacity: 0;
  z-index: 40;
  pointer-events: none;

  .timeline:hover & {
    opacity: 0.05;
  }
}

.range_track {
  height: 24px;
  cursor: pointer;

  &:active .handle {
    fill: transparent !important;
  }

  .range {
    border-radius: var(--radius);
    cursor: grab;
    position: absolute;
    height: 24px;
    background-color: rgba(255,255,255,0.03);
    border: 2px solid var(--surface-color-light);
    display: flex;
    z-index: 5;
    align-items: center;
    justify-content: center;

    &:active {
      cursor: grabbing;
    }
  }

  &:is(:hover,:active):not(:has(.handle:active)) .handle {
    fill: rgba(255,255,255,0.3);
  }

  .handle {
    color: rgba(255, 255, 255, 0);
    width: 20px;
    height: 20px;

    .range.active > & {
      color: rgba(255, 255, 255, 0.24);
      z-index: 1;
      min-width: 24px;
    }

    .range > &:hover,
    .range > &:active {
      color: rgba(255, 255, 255, 0.6);
    }
  }
}


.handleSpacer {
  flex-grow: 1;
  flex-shrink: 1;
}
